// <auto-generated />
using System;
using FirebirdSql.EntityFrameworkCore.Firebird.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetMind.Data;

namespace NetMind.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220330115249_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 31)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetMind.Areas.Admin.Models.Priority", b =>
                {
                    b.Property<int>("PriorityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("PriorityID");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("NetMind.Areas.Admin.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("StatusID");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("NetMind.Areas.Admin.Models.Tracker", b =>
                {
                    b.Property<int>("TrackerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.HasKey("TrackerID");

                    b.ToTable("Trackers");
                });

            modelBuilder.Entity("NetMind.Areas.Site.Models.Issue", b =>
                {
                    b.Property<int>("IssueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssigneeID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TIMESTAMP");

                    b.Property<int>("CreatorID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("BOOLEAN");

                    b.Property<int>("PriorityID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatusID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("VARCHAR(1000)");

                    b.Property<int>("TrackerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("IssueID");

                    b.HasIndex("AssigneeID");

                    b.HasIndex("CreatorID");

                    b.HasIndex("PriorityID");

                    b.HasIndex("StatusID");

                    b.HasIndex("TrackerID");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("NetMind.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR(64)");

                    b.Property<string>("Salt")
                        .HasMaxLength(24)
                        .HasColumnType("VARCHAR(24)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NetMind.Areas.Site.Models.Issue", b =>
                {
                    b.HasOne("NetMind.Models.User", "Assignee")
                        .WithMany()
                        .HasForeignKey("AssigneeID");

                    b.HasOne("NetMind.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetMind.Areas.Admin.Models.Priority", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetMind.Areas.Admin.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetMind.Areas.Admin.Models.Tracker", "Tracker")
                        .WithMany()
                        .HasForeignKey("TrackerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Creator");

                    b.Navigation("Priority");

                    b.Navigation("Status");

                    b.Navigation("Tracker");
                });
#pragma warning restore 612, 618
        }
    }
}
